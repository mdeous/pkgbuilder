name: Build and Publish

on:
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - entrypoint.sh
  pull_request:
    branches:
      - main
    paths:
      - Dockerfile
      - entrypoint.sh
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    permissions:
      packages: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Log into Docker registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      
      - name: Pull latest image
        run: docker pull ghcr.io/${{ github.repository_owner }}/pkgbuilder:latest
      
      - name: Build image
        uses: docker/build-push-action@v3.1.1
        with:
          pull: true
          push: false
          cache-from: ghcr.io/${{ github.repository_owner }}/pkgbuilder:latest
          tags: pkgbuilder:ci
          outputs: type=docker,dest=/tmp/image.tar
      
      - name: Upload image archive
        uses: actions/upload-artifact@v3
        with:
          name: pkgbuilder-image
          path: /tmp/image.tar

  test:
    name: Test Image
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download image archive
        uses: actions/download-artifact@v3
        with:
          name: pkgbuilder-image
          path: /tmp/
      
      - name: Import image
        run: docker load --input /tmp/image.tar
      
      - name: Checkout yay repository
        uses: actions/checkout@v3
        with:
          repository: Jguer/yay
          path: /tmp/yay
      
      - name: Build yay package
        run: |
          cd /tmp/yay
          docker run --rm -v "${PWD}:/pkg" pkgbuilder:ci

  publish:
    name: Publish Image
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    strategy:
      matrix:
        registry:
          - ghcr.io
          - docker.io
        include:
          - registry: ghcr.io
            secret: GITHUB_TOKEN
          - registry: docker.io
            secret: DOCKER_TOKEN
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Log into Docker registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ matrix.registry }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets[matrix.secret] }}
      
      - name: Extract image metadata
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: |
            ${{ matrix.registry }}/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable=true

      - name: Build and push image
        uses: docker/build-push-action@v3.1.1
        with:
          pull: true
          push: true
          cache-from: ghcr.io/${{ github.repository_owner }}/pkgbuilder:latest
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
