name: Build and Publish

on:
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - entrypoint.sh
  pull_request:
    branches:
      - main
    paths:
      - Dockerfile
      - entrypoint.sh
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

env:
  LATEST_TAG: mdeous/pkgbuilder:latest
  CI_TAG: pkgbuilder:ci

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    permissions:
      packages: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Log into GitHub container registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: mdeous
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      
      - name: Pull latest image
        run: docker pull ghcr.io/${LATEST_TAG}
      
      - name: Build image
        uses: docker/build-push-action@v3.1.1
        with:
          pull: true
          push: false
          cache-from: ghcr.io/${{ env.LATEST_TAG }}
          tags: ${{ env.CI_TAG }}
          outputs: type=docker,dest=/tmp/image.tar
      
      - name: Upload image archive
        uses: actions/upload-artifact@v3
        with:
          name: pkgbuilder-image
          path: /tmp/image.tar

  publish:
    name: Publish Image
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    strategy:
      matrix:
        registry:
          - ghcr.io
          - docker.io
        include:
          - registry: ghcr.io
            secret: GITHUB_TOKEN
          - registry: docker.io
            secret: DOCKER_TOKEN
    
    steps:
      - name: Download image archive
        uses: actions/download-artifact@v3
        with:
          name: pkgbuilder-image
          path: /tmp/
      
      - name: Import image
        run: docker load --input /tmp/image.tar
      
      - name: Log into Docker registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ matrix.registry }}
          username: mdeous
          password: ${{ secrets[matrix.secret] }}
      
      - name: Tag image with latest tag
        run: docker tag ${CI_TAG} ${{ matrix.registry }}/${LATEST_TAG}
      
      - name: Push image to container registry
        run: docker push ${{ matrix.registry }}/${LATEST_TAG}
